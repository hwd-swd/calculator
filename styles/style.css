/* reset default margin and padding */
* { 
    margin:0;
    border:0;
    font-size:100%;
    outline: 0;
    padding:0;
    font-family:  Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

:root{
    --pink: #eebeb0;
    --lightBlue: #b7d8eb;
    --darkBlue: #243746;
    --white: #f0ece9;
}

.container{
    position: relative;
    display:flex;
    flex-direction: column;
    justify-content: center;
    min-height: 100vh;
}

h1{
    text-align: center;
    font-size: 400%;
}

footer{
    background-color: var(--lightBlue);
    border-top: solid 1px black;
    padding: .5rem;
    position: absolute;
    bottom: 0;
    width:100%;
    text-align: right;
}

.buttons{
    display:grid;
    background-color: black;
    margin: 1rem  auto;
    grid-template-columns: repeat(4,120px);
    grid-template-rows: repeat(6,120px);
    grid-gap: 2px;
    grid-template-areas: 
    "display display display display"
    "inverse clearCurrent clear divide"
    "seven eight nine multiply"
    "four five six subtract"
    "one two three add"
    "toggle zero dot equals";
    border: solid 3px black;
}

.display{
    display:flex;
    align-items: center;
    justify-content: flex-end;
    grid-area:display;
    font-size: 300%;
    user-select: none;
    background-color: var(--white);
    padding: 1rem;
}

.button{
    background-color:var(--lightBlue);
    display:flex;
    user-select: none;
    text-align: center;
    font-size:250%; 
    align-items: center;
    justify-content: center;
}

.operator{
    background-color: var(--darkBlue);
    color: var(--white);
}

.other{
    background-color: var(--darkBlue);
    color: var(--white);
}

.button:active{
    background-color: var(--pink);
}

.button:hover{
    font-size: 270%;
}

#one{
    grid-area:one;    
}

#two{
    grid-area:two;    
}

#three{
    grid-area:three;    
}

#four{
    grid-area:four;
}

#five{
    grid-area:five;
}

#six{
    grid-area:six;
}

#seven{
    grid-area:seven;
}

#eight{
    grid-area:eight;
}

#nine{
    grid-area:nine;
}

#zero{
    grid-area:zero;
}

#add{
    grid-area:add;
}

#subtract{
    grid-area:subtract;
}

#multiply{
    grid-area:multiply;
}

#divide{
    grid-area:divide;
}

#equals{
    grid-area:equals;
    background-color: orange;
}

#equals:active{
    grid-area:equals;
    background-color: red;
}

#toggle{
    grid-area:toggle;
}

#dot{
    grid-area:dot;
}

#clear{
    grid-area:clear;
}

#inverse{
    grid-area:inverse;
}

#clearCurrent{
    grid-area:clearCurrent;
}